---
// src/pages/libros/etiquetas/[id].astro
export const prerender = false;

import db from "../../lib/db";
import { actualizarMarc } from '../../lib/actualizar_marc';

const { id } = Astro.params;

// 1. Validar par√°metro ID
if (!id || isNaN(Number(id))) {
  return new Response(null, {
    status: 400,
    statusText: 'ID de libro inv√°lido'
  });
}

// 2. Consultar datos
let libro = null;
let ejemplares = [];

try {
  // Consultar libro
  const libroRes = await db.query(`
    SELECT 
      id, titulo, autor, editorial, isbn, anio,
      clasificacion, ubicacion, paginas, edicion,
      subtitulo, lugar_publicacion,
      to_char(fecha_ingreso, 'YYYY-MM-DD') as fecha_ingreso
    FROM libros 
    WHERE id = $1
  `, [id]);
  
  libro = libroRes.rows[0];
  
  if (!libro) {
    return new Response(null, {
      status: 404,
      statusText: 'Libro no encontrado'
    });
  }

  // Consultar ejemplares
  const ejemplaresRes = await db.query(
    `SELECT * FROM ejemplares WHERE libro_id = $1 ORDER BY id DESC`,
    [id]
  );
  ejemplares = ejemplaresRes.rows;

} catch (error) {
  console.error('Error en consultas SQL:', error);
  return new Response(null, {
    status: 500,
    statusText: 'Error al consultar la base de datos'
  });
}

// 3. Campos MARC (mantener tu estructura existente)
const camposMARC = [
  // ... (tus campos MARC actuales)
];

// 4. Procesar formulario
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  
  // Opci√≥n 1: Guardar cambios MARC
  if (formData.get('action') === 'guardar_marc') {
    const result = await actualizarMarc(formData);
    if (result.success) {
      return Astro.redirect(`/libros/etiquetas/${id}?success=MARC+actualizado`);
    }
  }

  // Opci√≥n 2: Agregar nuevo ejemplar
  if (formData.get('action') === 'agregar_ejemplar') {
    try {
      await db.query(`
        INSERT INTO ejemplares (
          libro_id,
          codigo_barras,
          numero_adquisicion,
          ubicacion_especifica,
          estado,
          numero_ejemplar
        ) VALUES ($1, $2, $3, $4, 'disponible', $5)
      `, [
        id,
        formData.get('nuevo_codigo'),
        formData.get('nuevo_numero_adquisicion') || `INV-${new Date().getFullYear()}-${ejemplares.length + 1}`,
        formData.get('nuevo_ubicacion'),
        formData.get('nuevo_numero_ejemplar') || ejemplares.length + 1
      ]);
      
      return Astro.redirect(`/libros/etiquetas/${id}?success=Ejemplar+agregado`);
    } catch (error) {
      console.error('Error al agregar ejemplar:', error);
      return Astro.redirect(`/libros/etiquetas/${id}?error=Error+al+agregar+ejemplar`);
    }
  }
}
---
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ficha MARC21 - {libro.titulo || 'Sin t√≠tulo'}</title>
  <style>
    :root {
      --color-primary: #005D93;
      --color-secondary: #4a5568;
      --color-success: #10b981;
      --border-radius: 5px;
      --shadow-sm: 0 1px 3px rgba(0,0,0,0.1);
    }
    
    body {
      font-family: 'Segoe UI', system-ui, sans-serif;
      line-height: 1.6;
      margin: 0;
      padding: 20px;
      background-color: #f8fafc;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
    }
    
    header {
      background: var(--color-primary);
      color: white;
      padding: 1.5rem;
      border-radius: var(--border-radius);
      margin-bottom: 2rem;
      box-shadow: var(--shadow-sm);
    }
    
    h1, h2, h3 {
      margin: 0;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
      gap: 1.5rem;
    }
    
    .card {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow-sm);
      padding: 1.25rem;
      margin-bottom: 1.5rem;
    }
    
    .badge {
      display: inline-block;
      padding: 0.25rem 0.5rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 500;
    }
    
    .bg-green-100 { background-color: #d1fae5; color: #065f46; }
    .bg-yellow-100 { background-color: #fef3c7; color: #92400e; }
    
    .input {
      width: 100%;
      padding: 0.5rem 0.75rem;
      border: 1px solid #cbd5e0;
      border-radius: var(--border-radius);
      font-family: inherit;
    }
    
    .btn {
      padding: 0.75rem 1.5rem;
      border-radius: var(--border-radius);
      cursor: pointer;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.2s;
      border: none;
    }
    
    .btn-primary {
      background: var(--color-primary);
      color: white;
    }
    
    .btn-success {
      background: var(--color-success);
      color: white;
    }
    
    table {
      width: 100%;
      border-collapse: collapse;
    }
    
    th, td {
      padding: 0.75rem;
      text-align: left;
      border-bottom: 1px solid #e2e8f0;
    }
    
    .actions {
      margin-top: 2rem;
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
    }
    
    /* Estilos para mensajes */
    .alert {
      padding: 1rem;
      border-radius: var(--border-radius);
      margin-bottom: 1.5rem;
    }
    
    .alert-success {
      background: #d1fae5;
      color: #065f46;
    }
    
    .alert-error {
      background: #fee2e2;
      color: #b91c1c;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Mensajes de estado -->
    {Astro.url.searchParams.get('success') && (
      <div class="alert alert-success">
        {decodeURIComponent(Astro.url.searchParams.get('success'))}
      </div>
    )}
    {Astro.url.searchParams.get('error') && (
      <div class="alert alert-error">
        {decodeURIComponent(Astro.url.searchParams.get('error'))}
      </div>
    )}
    
    <header>
      <h1>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M4 19.5C4 18.9477 4.44772 18.5 5 18.5H19C19.5523 18.5 20 18.9477 20 19.5C20 20.0523 19.5523 20.5 19 20.5H5C4.44772 20.5 4 20.0523 4 19.5Z"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M4 5.5C4 4.94772 4.44772 4.5 5 4.5H14C14.5523 4.5 15 4.94772 15 5.5V15.5C15 16.0523 14.5523 16.5 14 16.5H5C4.44772 16.5 4 16.0523 4 15.5V5.5ZM6 6.5V14.5H13V6.5H6Z"/>
          <path d="M17 6.5C17 5.94772 17.4477 5.5 18 5.5C18.5523 5.5 19 5.94772 19 6.5V15.5C19 16.0523 18.5523 16.5 18 16.5C17.4477 16.5 17 16.0523 17 15.5V6.5Z"/>
        </svg>
        Ficha Catalogr√°fica MARC21
      </h1>
      <div>
        <div>T√≠tulo: <strong>{libro.titulo || 'Sin t√≠tulo'}</strong></div>
        <div>Ejemplares registrados: <strong>{ejemplares.length}</strong></div>
      </div>
    </header>

    <form method="POST">
      <input type="hidden" name="libro_id" value={libro.id}>

      <!-- Secci√≥n MARC -->
      <div class="grid">
        <!-- Columna Izquierda -->
        <div>
          {camposMARC.slice(0, 6).map(campo => (
            <div class="card">
              <h2>{campo.tag} - {campo.desc}</h2>
              <div>
                {campo.subcampos.map(sub => (
                  <div style="margin: 1rem 0;">
                    <label>
                      <strong>‚Ä°{sub.code}</strong> {sub.label}
                    </label>
                    <input 
                      type="text" 
                      name={`${campo.tag}_${sub.code}`} 
                      value={sub.value}
                      class="input"
                    >
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>

        <!-- Columna Derecha -->
        <div>
          {camposMARC.slice(6).map(campo => (
            <div class="card">
              <h2>{campo.tag} - {campo.desc}</h2>
              <div>
                {campo.subcampos.map(sub => (
                  <div style="margin: 1rem 0;">
                    <label>
                      <strong>‚Ä°{sub.code}</strong> {sub.label}
                    </label>
                    <input 
                      type="text" 
                      name={`${campo.tag}_${sub.code}`} 
                      value={sub.value}
                      class="input"
                    >
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Secci√≥n de Ejemplares -->
      <div class="card">
        <h2>üì¶ Gesti√≥n de Ejemplares F√≠sicos</h2>
        
        {ejemplares.length > 0 ? (
          <table>
            <thead>
              <tr>
                <th># Ejemplar</th>
                <th>C√≥digo</th>
                <th>Ubicaci√≥n</th>
                <th>Estado</th>
              </tr>
            </thead>
            <tbody>
              {ejemplares.map(e => (
                <tr>
                  <td>{e.numero_ejemplar}</td>
                  <td>{e.codigo_barras}</td>
                  <td>{e.ubicacion_especifica}</td>
                  <td>
                    <span class={`badge ${e.estado === 'disponible' ? 'bg-green-100' : 'bg-yellow-100'}`}>
                      {e.estado}
                    </span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p>No hay ejemplares registrados para este libro.</p>
        )}

        <h3 style="margin-top: 2rem;">‚ûï Registrar Nuevo Ejemplar</h3>
        <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 1rem; margin-top: 1rem;">
          <div>
            <label>N¬∞ Ejemplar</label>
            <input 
              type="number" 
              name="nuevo_numero_ejemplar" 
              value={ejemplares.length + 1}
              class="input"
            >
          </div>
          <div>
            <label>C√≥digo Barras</label>
            <input 
              type="text" 
              name="nuevo_codigo" 
              required
              class="input"
            >
          </div>
          <div>
            <label>N¬∞ Adquisici√≥n</label>
            <input 
              type="text" 
              name="nuevo_numero_adquisicion" 
              value={`INV-${new Date().getFullYear()}-${ejemplares.length + 1}`}
              class="input"
            >
          </div>
          <div>
            <label>Ubicaci√≥n</label>
            <input 
              type="text" 
              name="nuevo_ubicacion" 
              required
              class="input"
            >
          </div>
        </div>
      </div>

      <!-- Acciones -->
      <div class="actions">
        <button 
          type="submit" 
          name="action" 
          value="agregar_ejemplar" 
          class="btn btn-success"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
          </svg>
          Guardar Ejemplar
        </button>
        <button 
          type="submit" 
          name="action" 
          value="guardar_marc" 
          class="btn btn-primary"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M17 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V7L17 3ZM19 19H5V5H16.17L19 7.83V19ZM12 12C10.34 12 9 13.34 9 15C9 16.66 10.34 18 12 18C13.66 18 15 16.66 15 15C15 13.34 13.66 12 12 12ZM6 6H15V10H6V6Z"/>
          </svg>
          Guardar Cambios MARC
        </button>
      </div>
    </form>
  </div>
</body>
</html>
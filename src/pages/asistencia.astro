---
// src/pages/asistencia.astro
export const prerender = false;
import AdminLayout from '../layouts/AdminLayout.astro';
import db from '../lib/db';

// 1. Obtener todos los usuarios con sus carreras y cuatrimestre
const { rows: usuarios } = await db.query(`
  SELECT 
    u.id, 
    u.nombre, 
    u.matricula, 
    u.genero,
    u.semestre,
    c.id as carrera_id,
    COALESCE(c.nombre, u.carrera) as carrera,
    ct.nombre as cuatrimestre
  FROM usuarios u
  LEFT JOIN carreras c ON u.carrera_id = c.id
  LEFT JOIN cuatrimestre ct ON u.id_cuatrimestre = ct.id
  ORDER BY u.nombre
`);

// 2. Registrar asistencia
let mensaje = '';
let tipoMensaje = 'info';
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const usuarioId = formData.get('usuario_id');
  const accion = formData.get('accion');

  try {
    if (accion === 'registrar') {
      await db.query(
        `INSERT INTO visitas (usuario_id, tipo_visita) VALUES ($1, 'asistencia')`,
        [usuarioId]
      );
      mensaje = '✓ Asistencia registrada';
      tipoMensaje = 'success';
    } else {
      const { rowCount } = await db.query(
        `DELETE FROM visitas 
         WHERE id = (
           SELECT id FROM visitas 
           WHERE usuario_id = $1 
           AND DATE(fecha_hora) = CURRENT_DATE
           AND tipo_visita = 'asistencia'
           ORDER BY fecha_hora DESC 
           LIMIT 1
         )`,
        [usuarioId]
      );
      mensaje = rowCount > 0 ? '✗ Asistencia eliminada' : '⚠ No se encontró asistencia';
      tipoMensaje = rowCount > 0 ? 'error' : 'warning';
    }
  } catch (error) {
    mensaje = '⚠ Error: ' + error.message;
    tipoMensaje = 'error';
    console.error('Error en registro:', error);
  }
}

// 3. Obtener asistencias de hoy con cuatrimestre
const { rows: asistenciasHoy } = await db.query(`
  SELECT 
    v.usuario_id, 
    u.genero, 
    COALESCE(c.nombre, u.carrera) as carrera,
    ct.nombre as cuatrimestre
  FROM visitas v
  JOIN usuarios u ON v.usuario_id = u.id
  LEFT JOIN carreras c ON u.carrera_id = c.id
  LEFT JOIN cuatrimestre ct ON u.id_cuatrimestre = ct.id
  WHERE DATE(v.fecha_hora) = CURRENT_DATE
  AND v.tipo_visita = 'asistencia'
`);
const presentesHoy = new Map(asistenciasHoy.map(a => [a.usuario_id, a]));

// 4. Obtener datos para filtros
const { rows: carreras } = await db.query(`SELECT id, nombre FROM carreras ORDER BY nombre`);
const { rows: cuatrimestres } = await db.query(`SELECT id, nombre FROM cuatrimestre ORDER BY nombre`);
---

<style is:global>
  .main-container {
    height: calc(100vh - 64px);
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: #4f46e5 #f1f1f1;
  }
  
  .main-container::-webkit-scrollbar {
    width: 8px;
  }
  
  .main-container::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
  }
  
  .main-container::-webkit-scrollbar-thumb {
    background-color: #4f46e5;
    border-radius: 10px;
  }
  
  .card {
    background: white;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: all 0.2s ease;
  }
  
  .card:hover {
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transform: translateY(-2px);
  }
  
  .badge {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
  }
  
  .table-row:hover {
    background-color: #f9fafb;
  }
  
  .modal-overlay {
    background-color: rgba(0,0,0,0.5);
  }
  
  .toast {
    animation: slideIn 0.3s ease-out, fadeOut 0.5s ease-in 2.5s forwards;
  }
  
  @keyframes slideIn {
    from { transform: translateY(30px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  @keyframes fadeOut {
    to { opacity: 0; }
  }
</style>

<AdminLayout title="Control de Asistencia">
  <main class="main-container bg-gray-50 p-4 md:p-6">
    <!-- Encabezado -->
    <div class="card p-6 mb-6">
      <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
        <div class="flex items-center">
          <i class="fas fa-user-clock text-2xl text-indigo-600 mr-3"></i>
          <h1 class="text-2xl font-bold text-gray-800">Control de Asistencia</h1>
        </div>
        <button id="btnExportarExcel" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg flex items-center gap-2">
          <i class="fas fa-file-excel"></i>
          <span>Exportar Excel</span>
        </button>
      </div>
    </div>
    
    <!-- Filtros -->
    <div class="card p-6 mb-6 grid grid-cols-1 md:grid-cols-3 gap-4">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Carrera</label>
        <select id="filtro-carrera" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
          <option value="">Todas las carreras</option>
          {carreras.map(carrera => (
            <option value={carrera.id}>{carrera.nombre}</option>
          ))}
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Cuatrimestre</label>
        <select id="filtro-cuatrimestre" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
          <option value="">Todos</option>
          {cuatrimestres.map(cuatri => (
            <option value={cuatri.id}>{cuatri.nombre}</option>
          ))}
        </select>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Buscar</label>
        <div class="relative">
          <input type="text" id="busqueda" placeholder="Nombre, matrícula..." 
            class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
          <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
        </div>
      </div>
    </div>
    
    <!-- Resumen -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
      <div class="card p-4 flex items-center">
        <div class="bg-blue-100 p-3 rounded-full mr-4 text-blue-600">
          <i class="fas fa-users text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Total usuarios</p>
          <p class="text-2xl font-bold">{usuarios.length}</p>
        </div>
      </div>
      
      <div class="card p-4 flex items-center">
        <div class="bg-green-100 p-3 rounded-full mr-4 text-green-600">
          <i class="fas fa-user-check text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Presentes hoy</p>
          <p class="text-2xl font-bold text-green-600">{presentesHoy.size}</p>
        </div>
      </div>
      
      <div class="card p-4 flex items-center">
        <div class="bg-red-100 p-3 rounded-full mr-4 text-red-600">
          <i class="fas fa-user-times text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Ausentes hoy</p>
          <p class="text-2xl font-bold text-red-600">{usuarios.length - presentesHoy.size}</p>
        </div>
      </div>
    </div>
    
    <!-- Tabla de usuarios -->
    <div class="card overflow-hidden">
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200" id="tablaAsistencia">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Matrícula</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Carrera</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cuatrimestre</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Género</th>
              <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
              <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Acción</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {usuarios.map((usuario) => {
              const presente = presentesHoy.has(usuario.id);
              return (
                <tr key={usuario.id} class="table-row" 
                    data-carrera={usuario.carrera_id}
                    data-cuatrimestre={usuario.id_cuatrimestre}>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class={`flex-shrink-0 h-10 w-10 rounded-full flex items-center justify-center ${
                        usuario.genero === 'F' ? 'bg-pink-100 text-pink-600' : 'bg-blue-100 text-blue-600'
                      }`}>
                        <i class={`fas ${usuario.genero === 'F' ? 'fa-venus' : 'fa-mars'}`}></i>
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">{usuario.nombre}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{usuario.matricula}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{usuario.carrera || 'N/A'}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{usuario.cuatrimestre || usuario.semestre || 'N/A'}</td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {usuario.genero === 'F' ? (
                      <span class="badge bg-pink-100 text-pink-800">
                        <i class="fas fa-venus mr-1"></i> Femenino
                      </span>
                    ) : (
                      <span class="badge bg-blue-100 text-blue-800">
                        <i class="fas fa-mars mr-1"></i> Masculino
                      </span>
                    )}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-center">
                    <span class={`badge ${presente ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>
                      {presente ? (
                        <>
                          <i class="fas fa-check-circle mr-1"></i> Presente
                        </>
                      ) : (
                        <>
                          <i class="fas fa-times-circle mr-1"></i> Ausente
                        </>
                      )}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <form method="POST" class="inline-block">
                      <input type="hidden" name="usuario_id" value={usuario.id} />
                      <button
                        name="accion"
                        value={presente ? 'quitar' : 'registrar'}
                        class={`inline-flex items-center px-3 py-1.5 rounded-md text-white ${
                          presente ? 'bg-red-600 hover:bg-red-700' : 'bg-indigo-600 hover:bg-indigo-700'
                        }`}
                      >
                        {presente ? (
                          <>
                            <i class="fas fa-user-minus mr-1"></i> Quitar
                          </>
                        ) : (
                          <>
                            <i class="fas fa-user-plus mr-1"></i> Registrar
                          </>
                        )}
                      </button>
                    </form>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </div>
    
    <!-- Modal Exportar Excel -->
    <div id="modalExportarExcel" class="fixed inset-0 z-50 hidden flex items-center justify-center modal-overlay">
      <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-lg font-bold text-gray-800">
            <i class="fas fa-file-excel text-green-600 mr-2"></i>
            Exportar a Excel
          </h3>
          <button id="btnCancelarExcel" class="text-gray-400 hover:text-gray-600">
            <i class="fas fa-times"></i>
          </button>
        </div>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Carrera</label>
            <select id="excel-carrera" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
              <option value="">Todas las carreras</option>
              {carreras.map(carrera => (
                <option value={carrera.id}>{carrera.nombre}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Cuatrimestre</label>
            <select id="excel-cuatrimestre" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
              <option value="">Todos</option>
              {cuatrimestres.map(cuatri => (
                <option value={cuatri.id}>{cuatri.nombre}</option>
              ))}
            </select>
          </div>
        </div>
        
        <div class="mt-6 flex justify-end space-x-3">
          <button id="btnCancelarExcel" type="button" class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
            Cancelar
          </button>
          <button id="btnGenerarExcel" type="button" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center gap-2">
            <i class="fas fa-file-excel"></i>
            <span>Generar Excel</span>
          </button>
        </div>
      </div>
    </div>
    
    <!-- Notificación -->
    {mensaje && (
      <div id="notificacion" class={`fixed bottom-6 right-6 text-white px-6 py-4 rounded-lg shadow-lg flex items-center toast ${
        tipoMensaje === 'success' ? 'bg-green-500' : 
        tipoMensaje === 'error' ? 'bg-red-500' : 'bg-blue-500'
      }`}>
        <i class={`fas ${
          tipoMensaje === 'success' ? 'fa-check-circle' : 
          tipoMensaje === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'
        } mr-3 text-xl`}></i>
        <span class="font-medium">{mensaje}</span>
      </div>
    )}
  </main>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      // Función para filtrar la tabla
      const filtrarTabla = () => {
        const carrera = document.getElementById('filtro-carrera').value;
        const cuatrimestre = document.getElementById('filtro-cuatrimestre').value;
        const busqueda = document.getElementById('busqueda').value.toLowerCase();
        
        document.querySelectorAll('#tablaAsistencia tbody tr').forEach(fila => {
          const filaCarrera = fila.getAttribute('data-carrera');
          const filaCuatrimestre = fila.getAttribute('data-cuatrimestre');
          const textoFila = fila.textContent.toLowerCase();
          
          const cumpleCarrera = !carrera || filaCarrera === carrera;
          const cumpleCuatrimestre = !cuatrimestre || filaCuatrimestre === cuatrimestre;
          const cumpleBusqueda = !busqueda || textoFila.includes(busqueda);
          
          fila.style.display = cumpleCarrera && cumpleCuatrimestre && cumpleBusqueda ? '' : 'none';
        });
      };

      // Event listeners para los filtros
      document.getElementById('filtro-carrera').addEventListener('change', filtrarTabla);
      document.getElementById('filtro-cuatrimestre').addEventListener('change', filtrarTabla);
      document.getElementById('busqueda').addEventListener('input', filtrarTabla);

      // Configuración del modal de exportación Excel
      const modalExcel = document.getElementById('modalExportarExcel');
      document.getElementById('btnExportarExcel').addEventListener('click', () => {
        modalExcel.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      });

      const cerrarModal = () => {
        modalExcel.classList.add('hidden');
        document.body.style.overflow = 'auto';
      };
      
      document.getElementById('btnCancelarExcel').addEventListener('click', cerrarModal);
      modalExcel.addEventListener('click', (e) => {
        if (e.target === modalExcel) cerrarModal();
      });

      // Función para exportar a Excel con filtros
      document.getElementById('btnGenerarExcel').addEventListener('click', function() {
        const carreraId = document.getElementById('excel-carrera').value;
        const cuatrimestreId = document.getElementById('excel-cuatrimestre').value;
        
        // Filtrar filas según los criterios seleccionados
        const filasFiltradas = Array.from(document.querySelectorAll('#tablaAsistencia tbody tr'))
          .filter(fila => {
            const filaCarrera = fila.getAttribute('data-carrera');
            const filaCuatrimestre = fila.getAttribute('data-cuatrimestre');
            
            const cumpleCarrera = !carreraId || filaCarrera === carreraId;
            const cumpleCuatrimestre = !cuatrimestreId || filaCuatrimestre === cuatrimestreId;
            
            return cumpleCarrera && cumpleCuatrimestre;
          });
        
        // Crear contenido CSV (maneja símbolos correctamente)
        let csvContent = "data:text/csv;charset=utf-8,";
        
        // Encabezados
        csvContent += "Nombre,Matrícula,Carrera,Cuatrimestre,Género,Estado\n";
        
        // Datos
        filasFiltradas.forEach(fila => {
          const celdas = fila.querySelectorAll('td');
          const nombre = celdas[0].querySelector('div.text-sm').textContent.replace(/"/g, '""');
          const matricula = celdas[1].textContent.replace(/"/g, '""');
          const carrera = celdas[2].textContent.replace(/"/g, '""');
          const cuatrimestre = celdas[3].textContent.replace(/"/g, '""');
          const genero = celdas[4].textContent.replace(/"/g, '""');
          const estado = celdas[5].textContent.trim().replace(/"/g, '""');
          
          csvContent += `"${nombre}","${matricula}","${carrera}","${cuatrimestre}","${genero}","${estado}"\n`;
        });
        
        // Descargar archivo
        const encodedUri = encodeURI(csvContent);
        const link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", `asistencia_${new Date().toISOString().slice(0,10)}.csv`);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        // Cerrar modal
        cerrarModal();
      });

      // Ocultar notificación después de 3 segundos
      setTimeout(() => {
        const notificacion = document.getElementById('notificacion');
        if (notificacion) {
          notificacion.remove();
        }
      }, 3000);
    });
  </script>
</AdminLayout>
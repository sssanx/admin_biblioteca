---
import { db } from '../lib/db.js';
console.log('DB ES:', db);

import AdminLayout from '../layouts/AdminLayout.astro';

const url = new URL(Astro.request.url);
const tipo = url.searchParams.get('tipo') || 'libros';
const q = url.searchParams.get('q') || '';
const filtroEstado = url.searchParams.get('estado') || 'todos';
const clasificacion = url.searchParams.get('clasificacion') || '';
const editorial = url.searchParams.get('editorial') || '';
const anio = url.searchParams.get('anio') || '';

let resultados = [];
let total = 0;
let sugerencias = [];

// Consulta para sugerencias (búsqueda en tiempo real)
if (q.length >= 2) {
  if (tipo === 'usuarios') {
    const resSugerencias = await db.query(
      `SELECT nombre, matricula FROM usuarios 
       WHERE LOWER(nombre) LIKE LOWER($1) OR matricula::text LIKE $1
       LIMIT 5`,
      [`%${q}%`]
    );
    sugerencias = resSugerencias.rows;
  } else {
    const resSugerencias = await db.query(
      `SELECT id, titulo, isbn FROM libros 
       WHERE LOWER(titulo) LIKE LOWER($1) OR 
             LOWER(isbn) LIKE LOWER($1) OR
             LOWER('INT-' || id::text) LIKE LOWER($1)
       LIMIT 5`,
      [`%${q}%`]
    );
    sugerencias = resSugerencias.rows.map(row => ({
      ...row,
      displayIsbn: row.isbn ? row.isbn : `INT-${row.id}`
    }));
  }
}

// Consulta principal
if (tipo === 'usuarios') {
  let query = `
    SELECT 
      u.id,
      u.nombre,
      u.correo,
      u.rol,
      u.matricula,
      COALESCE(c.nombre, 'Sin carrera') as carrera,
      COUNT(p.id) FILTER (WHERE p.fecha_devolucion IS NULL) as prestamos_activos
    FROM usuarios u
    LEFT JOIN carreras c ON u.carrera_id = c.id
    LEFT JOIN prestamos p ON p.id_usuario = u.id
  `;

  const params = [];
  let whereClauses = [];

  if (q) {
    whereClauses.push(`(LOWER(u.nombre) LIKE LOWER($${params.length + 1}) OR 
                       LOWER(u.correo) LIKE LOWER($${params.length + 1}) OR 
                       u.matricula::text LIKE $${params.length + 1})`);
    params.push(`%${q}%`);
  }

  if (filtroEstado === 'con_prestamos') {
    whereClauses.push(`EXISTS (SELECT 1 FROM prestamos p WHERE p.id_usuario = u.id AND p.fecha_devolucion IS NULL)`);
  }

  if (whereClauses.length > 0) {
    query += ` WHERE ${whereClauses.join(' AND ')}`;
  }

  query += ` GROUP BY u.id, c.nombre ORDER BY u.nombre ASC`;

  const res = await db.query(query, params);
  resultados = res.rows;
} else {
  let query = `
    SELECT  
      l.id,
      l.titulo,
      l.autor,
      l.editorial,
      COALESCE(l.isbn, 'INT-' || l.id::text) AS isbn,
      l.clasificacion,
      l.anio_publicacion AS anio,

      CASE WHEN pa.prestados > 0 THEN 'prestado'
           ELSE 'disponible'
      END AS estado,

      COALESCE(e.total, 0) AS total_ejemplares,
      COALESCE(e.disponibles, 0) AS disponibles,
      e.codigos_barras,
      e.numeros_adquisicion,
      e.ubicaciones

    FROM libros l

    LEFT JOIN (
      SELECT 
        libro_id,
        COUNT(*) AS total,
        COUNT(*) FILTER (WHERE estado = 'disponible') AS disponibles,
        STRING_AGG(codigo_barras, ', ') AS codigos_barras,
        STRING_AGG(numero_adquisicion::text, ', ') AS numeros_adquisicion,
        STRING_AGG(ubicacion_especifica, ', ') AS ubicaciones
      FROM ejemplares
      GROUP BY libro_id
    ) e ON e.libro_id = l.id

    LEFT JOIN (
      SELECT 
        p.libro_id,
        COUNT(*) AS prestados
      FROM prestamos p
      JOIN ejemplares ej ON p.ejemplar_id = ej.id
      WHERE p.fecha_devolucion IS NULL
      GROUP BY p.libro_id
    ) pa ON pa.libro_id = l.id
  `;

  const params = [];
  let whereClauses = [];

  if (q) {
    whereClauses.push(`(
      LOWER(l.titulo) LIKE LOWER($${params.length + 1}) OR
      LOWER(l.autor) LIKE LOWER($${params.length + 1}) OR
      LOWER(l.isbn) LIKE LOWER($${params.length + 1}) OR
      LOWER('INT-' || l.id::text) LIKE LOWER($${params.length + 1}) OR
      LOWER(l.clasificacion) LIKE LOWER($${params.length + 1})
    )`);
    params.push(`%${q}%`);
  }

  if (filtroEstado === 'disponible') {
    whereClauses.push(`NOT EXISTS (
      SELECT 1 FROM prestamos p 
      JOIN ejemplares ej ON p.ejemplar_id = ej.id
      WHERE p.libro_id = l.id AND p.fecha_devolucion IS NULL
    )`);
  } else if (filtroEstado === 'prestado') {
    whereClauses.push(`EXISTS (
      SELECT 1 FROM prestamos p 
      JOIN ejemplares ej ON p.ejemplar_id = ej.id
      WHERE p.libro_id = l.id AND p.fecha_devolucion IS NULL
    )`);
  }

  if (clasificacion) {
    whereClauses.push(`LOWER(l.clasificacion) LIKE LOWER($${params.length + 1})`);
    params.push(`%${clasificacion}%`);
  }

  if (editorial) {
    whereClauses.push(`LOWER(l.editorial) LIKE LOWER($${params.length + 1})`);
    params.push(`%${editorial}%`);
  }

  if (anio) {
    whereClauses.push(`l.anio_publicacion = $${params.length + 1}`);
    params.push(anio);
  }

  if (whereClauses.length > 0) {
    query += ` WHERE ${whereClauses.join(' AND ')}`;
  }

  query += `
    GROUP BY l.id, e.total, e.disponibles, e.codigos_barras, e.numeros_adquisicion, e.ubicaciones, pa.prestados
    ORDER BY l.titulo ASC
  `;

  const res = await db.query(query, params);
  resultados = res.rows;
}

total = resultados.length;
---

<style>
  .main-container {
    height: calc(100vh - 64px);
    overflow-y: auto;
    padding-bottom: 2rem;
  }
  .content-container {
    min-height: calc(100% - 80px);
  }
</style>

<AdminLayout title={`Búsqueda ${tipo === 'usuarios' ? 'Usuarios' : 'Libros'}`}>
  <div class="main-container">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 content-container">
      <!-- Formulario de búsqueda avanzada -->
      <form method="GET" class="bg-white rounded-lg shadow-sm p-6 mb-6 sticky top-0 z-10">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Tipo</label>
            <select name="tipo" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
              <option value="libros" selected={tipo === 'libros'}>Libros</option>
              <option value="usuarios" selected={tipo === 'usuarios'}>Usuarios</option>
            </select>
          </div>
          
          <div class="md:col-span-2">
            <label class="block text-sm font-medium text-gray-700 mb-1">Búsqueda</label>
            <div class="relative">
              <input 
                type="text" 
                name="q" 
                value={q}
                list="suggestions"
                placeholder={tipo === 'usuarios' ? 'Nombre, matrícula o correo' : 'Título, autor, ISBN o ID interno'}
                class="w-full border border-gray-300 rounded-md px-3 py-2 pl-10 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
              <svg xmlns="http://www.w3.org/2000/svg" class="absolute left-3 top-2.5 h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <datalist id="suggestions">
              {sugerencias.map(item => (
                <option value={tipo === 'usuarios' ? item.nombre : item.titulo}>
                  {tipo === 'usuarios' ? `Matrícula: ${item.matricula}` : `ISBN/ID: ${item.displayIsbn || item.isbn || `INT-${item.id}`}`}
                </option>
              ))}
            </datalist>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Estado</label>
            <select name="estado" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
              <option value="todos" selected={filtroEstado === 'todos'}>Todos</option>
              {tipo === 'libros' ? (
                <>
                  <option value="disponible" selected={filtroEstado === 'disponible'}>Disponibles</option>
                  <option value="prestado" selected={filtroEstado === 'prestado'}>Prestados</option>
                </>
              ) : (
                <option value="con_prestamos" selected={filtroEstado === 'con_prestamos'}>Con préstamos</option>
              )}
            </select>
          </div>
        </div>
        
        <!-- Campos avanzados para libros -->
        {tipo === 'libros' && (
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Clasificación</label>
              <input 
                type="text" 
                name="clasificacion" 
                value={clasificacion}
                placeholder="Ej. 025.04"
                class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Editorial</label>
              <input 
                type="text" 
                name="editorial" 
                value={editorial}
                placeholder="Nombre editorial"
                class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Año publicación</label>
              <input 
                type="number" 
                name="anio" 
                value={anio}
                placeholder="Ej. 2023"
                class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
            </div>
          </div>
        )}
        
        <div class="flex justify-end mt-4 space-x-3">
          <a 
            href="?" 
            class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Limpiar
          </a>
          <button 
            type="submit" 
            class="px-4 py-2 bg-indigo-600 text-white rounded-md text-sm font-medium hover:bg-indigo-700"
          >
            Buscar
          </button>
        </div>
      </form>

      <!-- Resultados -->
      <div class="bg-white rounded-lg shadow-sm p-4 mb-6 flex flex-wrap items-center justify-between gap-4">
        <p class="text-sm text-gray-600">
          {total} {total === 1 ? 'resultado' : 'resultados'} encontrados
        </p>
        
        {total > 0 && (
          <div class="flex items-center space-x-4">
            <span class="text-sm text-gray-600">Ordenar por:</span>
            <select class="border border-gray-300 rounded-md px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500">
              <option>Relevancia</option>
              <option>Título</option>
              {tipo === 'libros' && <option>Autor</option>}
              <option>Fecha</option>
            </select>
          </div>
        )}
      </div>

      {total > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {tipo === 'usuarios' ? (
            resultados.map(user => (
              <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:shadow-lg transition-shadow">
                <div class="p-6">
                  <div class="flex items-center gap-4 mb-4">
                    <div class="bg-indigo-100 p-3 rounded-full text-indigo-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                    </div>
                    <div>
                      <h2 class="font-semibold text-lg text-gray-900">{user.nombre}</h2>
                      <p class="text-sm text-gray-500">{user.rol} • {user.carrera}</p>
                    </div>
                  </div>
                  
                  <div class="space-y-2 text-sm">
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                      </svg>
                      Matrícula: {user.matricula || 'No especificada'}
                    </p>
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                      {user.correo}
                    </p>
                  </div>
                  
                  <div class="mt-4 pt-4 border-t border-gray-100 flex justify-between items-center">
                    <div class="flex gap-2">
                      <span class={`px-2 py-1 text-xs rounded-full ${user.prestamos_activos > 0 ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'}`}>
                        Préstamos: {user.prestamos_activos}
                      </span>
                    </div>
                    <a 
                      href={`/usuarios/editar?id=${user.id}`} 
                      class="text-sm text-indigo-600 hover:text-indigo-800"
                    >
                      Ver detalles
                    </a>
                  </div>
                </div>
              </div>
            ))
          ) : (
            resultados.map(libro => (
              <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:shadow-lg transition-shadow">
                <div class="p-6">
                  <div class="flex items-start gap-4 mb-4">
                    <div class={`p-3 rounded-full ${libro.estado === 'prestado' ? 'bg-red-100 text-red-600' : 'bg-green-100 text-green-600'}`}>
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                      </svg>
                    </div>
                    <div>
                      <h2 class="font-semibold text-lg text-gray-900">{libro.titulo}</h2>
                      <p class="text-sm text-gray-500">Por {libro.autor}</p>
                    </div>
                  </div>
                  
                  <div class="space-y-2 text-sm mb-4">
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
                      </svg>
                      {libro.isbn.startsWith('INT-') ? 'ID Interno' : 'ISBN'}: {libro.isbn || 'No especificado'}
                    </p>
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                      </svg>
                      Editorial: {libro.editorial || 'No especificada'}
                    </p>
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                      </svg>
                      Clasificación: {libro.clasificacion || 'No especificada'}
                    </p>
                    <p class="flex items-center gap-2 text-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                      Año: {libro.anio || 'No especificado'}
                    </p>
                  </div>
                  
                  <div class="flex flex-wrap items-center justify-between gap-2 mt-4 pt-4 border-t border-gray-100">
                    <div class="flex gap-2">
                      <span class={`px-2 py-1 text-xs rounded-full ${libro.estado === 'prestado' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}`}>
                        {libro.estado === 'prestado' ? 'Prestado' : 'Disponible'}
                      </span>
                      <span class="px-2 py-1 text-xs bg-gray-100 text-gray-800 rounded-full">
                        Ejemplares: {libro.disponibles}/{libro.total_ejemplares}
                      </span>
                    </div>
                    
                    <div class="flex gap-2">
                      {libro.estado === 'disponible' && (
                        <a 
                          href={`/prestamos/nuevo?libro_id=${libro.id}`} 
                          class="text-sm text-green-600 hover:text-green-800"
                        >
                          
                        </a>
                      )}
                      <a 
                        href={`/etiquetas?modo=masivo&libroId=${libro.id}`}
                        class="text-sm text-blue-600 hover:text-blue-800 flex items-center"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
                        </svg>
                        
                      </a>
                    </div>
                  </div>
                  
                  {libro.codigos_barras && (
                    <div class="mt-3 pt-3 border-t border-gray-100">
                      <p class="text-xs text-gray-500 mb-1">Códigos de barras:</p>
                      <div class="flex flex-wrap gap-1">
                        {libro.codigos_barras.split(', ').map((codigo, index) => (
                          <span 
                            class="text-xs bg-gray-100 px-2 py-1 rounded flex items-center"
                            title={`N° Adq: ${libro.numeros_adquisicion?.split(', ')[index] || 'N/A'} | Ubicación: ${libro.ubicaciones?.split(', ')[index] || 'N/A'}`}
                          >
                            {codigo}
                            <a 
                              href={`/etiquetas?modo=individual&ejemplarId=${libro.id}`} 
                              class="ml-1 text-blue-500 hover:text-blue-700"
                            >
                              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
                              </svg>
                            </a>
                          </span>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              </div>
            ))
          )}
        </div>
      ) : (
        <div class="bg-white rounded-xl shadow-sm p-12 text-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No se encontraron resultados</h3>
          <p class="text-gray-600 max-w-md mx-auto">
            {q 
              ? `No encontramos ${tipo === 'usuarios' ? 'usuarios' : 'libros'} que coincidan con "${q}"`
              : `No hay ${tipo === 'usuarios' ? 'usuarios' : 'libros'} registrados en el sistema`}
          </p>
          {q && (
            <a 
              href="?" 
              class="mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700"
            >
              Ver todos los {tipo === 'usuarios' ? 'usuarios' : 'libros'}
            </a>
          )}
        </div>
      )}
    </div>
  </div>
</AdminLayout>
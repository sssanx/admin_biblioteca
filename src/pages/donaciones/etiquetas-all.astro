---
import db from '../../../lib/db.js'; // Ajusta la ruta según tu proyecto

// Obtener todos los items de donación procesados con libro_id y cantidad > 0
const { rows: items } = await db.query(`
  SELECT id, titulo, autor, isbn, cantidad, ubicacion
  FROM items_donacion
  WHERE procesado = true AND libro_id IS NOT NULL AND cantidad > 0
  ORDER BY fecha_procesado DESC
`);

// Generar ejemplares (una etiqueta por unidad)
function generarEjemplares(items) {
  return items.flatMap(item => {
    const ejemplares = [];
    const cantidad = item.cantidad || 1;

    for (let i = 1; i <= cantidad; i++) {
      ejemplares.push({
        ...item,
        ejemplarNumero: i,
        codigoUnico: item.isbn ? item.isbn : `${item.id}-${i}`
      });
    }
    return ejemplares;
  });
}

const ejemplares = generarEjemplares(items);
---

<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Etiquetas de libros donados procesados</title>
  <style>
    body {
      font-family: 'Segoe UI', Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .header {
      text-align: center;
      margin-bottom: 30px;
      padding-bottom: 15px;
      border-bottom: 2px solid #0077C8;
    }
    .header h1 {
      color: #002E5D;
      margin-bottom: 5px;
      font-size: 28px;
    }
    .header p {
      color: #666;
      font-size: 16px;
    }
    .etiquetas-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 15px;
      margin-bottom: 30px;
    }
    .etiqueta {
      background-color: white;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 15px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      transition: transform 0.2s;
    }
    .etiqueta:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    .etiqueta-titulo {
      font-weight: bold;
      font-size: 16px;
      color: #002E5D;
      margin-bottom: 8px;
      border-bottom: 1px solid #eee;
      padding-bottom: 5px;
    }
    .etiqueta-info {
      font-size: 14px;
      color: #555;
      margin-bottom: 5px;
    }
    .etiqueta-isbn {
      font-family: monospace;
      background-color: #f0f0f0;
      padding: 2px 5px;
      border-radius: 3px;
      font-size: 13px;
    }
    .barcode-container {
      margin-top: 10px;
      text-align: center;
      padding: 5px;
      background-color: white;
      border: 1px solid #eee;
      border-radius: 4px;
    }
    .controls {
      text-align: center;
      margin: 30px 0;
    }
    .btn-print {
      background: linear-gradient(to bottom, #0077C8, #005fa3);
      color: white;
      border: none;
      padding: 12px 25px;
      font-size: 16px;
      border-radius: 6px;
      cursor: pointer;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
      transition: all 0.3s;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }
    .btn-print:hover {
      background: linear-gradient(to bottom, #0066B3, #004d88);
      box-shadow: 0 3px 8px rgba(0,0,0,0.3);
    }
    .btn-print i {
      font-size: 18px;
    }
    @media print {
      body {
        padding: 0;
        background-color: white;
      }
      .header, .controls {
        display: none;
      }
      .etiquetas-container {
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
      }
      .etiqueta {
        page-break-inside: avoid;
        box-shadow: none;
        border: 1px solid #ccc;
      }
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>Etiquetas de libros donados procesados</h1>
    <p>Total de ejemplares: {ejemplares.length}</p>
  </div>

  <div class="etiquetas-container">
    {ejemplares.length === 0 ? (
      <p class="no-items">No hay ejemplares procesados.</p>
    ) : (
      ejemplares.map((ejemplar) => (
        <div class="etiqueta" key={`${ejemplar.id}-${ejemplar.ejemplarNumero}`}>
          <div class="etiqueta-titulo">{ejemplar.titulo || 'Sin título'}</div>
          <div class="etiqueta-info"><strong>Autor:</strong> {ejemplar.autor || 'Desconocido'}</div>
          <div class="etiqueta-info"><strong>Ejemplar:</strong> {ejemplar.ejemplarNumero} de {ejemplar.cantidad || 1}</div>
          {ejemplar.isbn && <div class="etiqueta-info"><strong>ISBN:</strong> <span class="etiqueta-isbn">{ejemplar.isbn}</span></div>}
          <div class="barcode-container">
            <svg id={`barcode-${ejemplar.id}-${ejemplar.ejemplarNumero}`}></svg>
          </div>
        </div>
      ))
    )}
  </div>

  <div class="controls">
    <button class="btn-print" id="btnPrint">
      <i class="fas fa-print"></i> Imprimir etiquetas
    </button>
  </div>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      const etiquetas = document.querySelectorAll('.etiqueta');
      etiquetas.forEach(etiqueta => {
        const svg = etiqueta.querySelector('svg');
        if (svg) {
          const isbnElement = etiqueta.querySelector('.etiqueta-isbn');
          const codigo = isbnElement ? isbnElement.textContent : svg.id.replace('barcode-', '');
          JsBarcode(svg, codigo, {
            format: "CODE128",
            lineColor: "#000000",
            width: 2,
            height: 50,
            displayValue: true,
            margin: 10,
            fontSize: 14,
            textMargin: 3
          });
        }
      });
    });

    document.getElementById('btnPrint').addEventListener('click', function() {
      window.print();
    });
  </script>
</body>
</html>

---
// backend/query.astro
import db from '../../lib/db.js';

const url = new URL(Astro.request.url);
const queryParam = url.searchParams.get('q') || '';
const searchQuery = decodeURIComponent(queryParam.trim());

let resultados = [];
if (searchQuery.length >= 2) {
  try {
    const { rows } = await db.query(
      `SELECT 
        e.id,
        e.codigo_barras,
        e.numero_adquisicion,
        e.numero_ejemplar,
        e.ubicacion_especifica,
        l.titulo
       FROM ejemplares e
       JOIN libros l ON l.id = e.libro_id
       WHERE e.codigo_barras ILIKE $1
          OR e.numero_adquisicion ILIKE $1
          OR l.titulo ILIKE $1
       ORDER BY l.titulo, e.numero_ejemplar
       LIMIT 25`,
      [`%${searchQuery}%`]
    );

    resultados = rows.map(r => ({
      id: r.id,
      codigo: r.codigo_barras || 'SN',
      titulo: r.titulo || 'Sin título',
      ubic: r.ubicacion_especifica || 'Sin ubicación'
    }));
  } catch (err) {
    console.error('Error en la consulta:', err);
  }
}
---
<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Generador de Etiquetas - Biblioteca</title>

<!-- Librerías -->
<script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js"></script>

<!-- Iconos (Font Awesome) -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
  /* =====================================================
     PALETA Y VARIABLES
  ===================================================== */
  :root {
    --color-primary:         #1B396A;
    --color-primary-dark:    #142a51;
    --color-primary-light:   #2a4a8a;
    --color-success:         #4CAF50;
    --color-success-dark:    #3d8b40;
    --color-danger:          #E74C3C;
    --color-danger-dark:     #c0392b;
    --color-warning:         #F39C12;
    --color-info:            #3498DB;
    --color-light:           #F8F9FA;
    --color-dark:            #2C3E50;
    --color-gray:            #95A5A6;
    --color-gray-light:      #ECF0F1;
    --color-border:          #DEE2E6;
  }

  /* =====================================================
     BASE / LAYOUT
  ===================================================== */
  body {
    font-family: 'Segoe UI','Roboto','Helvetica Neue',Arial,sans-serif;
    margin: 0;
    padding: 20px;
    background: var(--color-light);
    color: var(--color-dark);
    line-height: 1.6;
  }

  .container { max-width: 1200px; margin: 0 auto; }

  header {
    background: var(--color-primary);
    color: #fff;
    padding: 25px;
    border-radius: 10px;
    margin-bottom: 25px;
    box-shadow: 0 4px 12px rgba(0,0,0,.1);
    position: relative;
    overflow: hidden;
  }
  header::after {
    content: '';
    position: absolute;
    left: 0; right: 0; bottom: 0;
    height: 4px;
    background: linear-gradient(90deg,var(--color-primary-dark),var(--color-primary-light));
  }

  h1, h2 { margin: 0; }
  h1 { font-size: 1.8rem; margin-bottom: 8px; display: flex; align-items: center; gap: 12px; }
  h2 {
    font-size: 1.4rem; color: var(--color-primary);
    margin-bottom: 20px; padding-bottom: 10px;
    border-bottom: 2px solid var(--color-gray-light);
    display: flex; align-items: center; gap: 10px;
  }

  /* =====================================================
     FORMULARIO DE BÚSQUEDA Y SECCIONES
  ===================================================== */
  .search-section {
    background: #fff;
    padding: 25px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,.05);
    margin-bottom: 25px;
    border: 1px solid var(--color-border);
  }

  .search-form { display: flex; gap: 12px; }

  .search-input {
    flex: 1;
    padding: 12px 15px;
    border: 2px solid var(--color-border);
    border-radius: 8px;
    font-size: 1rem;
    transition: all .3s;
  }
  .search-input:focus {
    border-color: var(--color-primary);
    outline: none;
    box-shadow: 0 0 0 3px rgba(27,57,106,.2);
  }

  /* =====================================================
     BOTONES
  ===================================================== */
  .btn {
    padding: 12px 20px;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    font-size: .95rem;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all .3s;
  }
  .btn-sm { padding: 8px 12px; font-size: .85rem; }
  .btn i  { font-size: .9em; }

  .btn-primary { background: var(--color-primary); color:#fff; }
  .btn-primary:hover { background: var(--color-primary-dark); transform: translateY(-1px); }

  .btn-success { background: var(--color-success); color:#fff; }
  .btn-success:hover { background: var(--color-success-dark); transform: translateY(-1px); }

  .btn-danger  { background: var(--color-danger); color:#fff; }
  .btn-danger:hover { background: var(--color-danger-dark); transform: translateY(-1px); }

  .btn-outline { background:none; border:2px solid var(--color-primary); color:var(--color-primary); }
  .btn-outline:hover { background:var(--color-primary); color:#fff; }

  /* =====================================================
     TABLAS
  ===================================================== */
  .table-responsive {
    overflow-x: auto;
    margin-bottom: 20px;
    border-radius: 8px;
    border: 1px solid var(--color-border);
    box-shadow: 0 2px 10px rgba(0,0,0,.05);
  }
  table      { width:100%; border-collapse:collapse; background:#fff; }
  th, td     { padding:14px 16px; text-align:left; border-bottom:1px solid var(--color-border); }
  th         { background:var(--color-primary); color:#fff; font-weight:600; position:sticky; top:0; }
  tr:hover   { background:rgba(27,57,106,.03); }

  .no-results {
    padding:30px 20px; background:var(--color-gray-light); border-radius:8px;
    display:flex; flex-direction:column; align-items:center; gap:15px;
    color:var(--color-dark);
  }

  .cart-actions { display:flex; gap:12px; margin-top:20px; }
  .badge {
    display:inline-flex; align-items:center; padding:4px 10px;
    border-radius:20px; background:var(--color-primary); color:#fff; font-size:.85rem; font-weight:600;
  }

  /* =====================================================
     ETIQUETAS MEJORADAS PARA ESCANEO
  ===================================================== */
  .labels-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(65mm, 1fr));
    gap: 5mm;
    padding: 10mm;
    justify-content: center;
  }

  .label {
    width: 65mm;
    height: 35mm;
    border: 1px solid #ddd;
    border-radius: 3px;
    background: white;
    display: grid;
    grid-template-rows: 7mm 1fr auto;
    font-family: Arial, sans-serif;
    position: relative;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    page-break-inside: avoid;
  }

  .label-header {
    background: #1B396A;
    color: white;
    padding: 1mm;
    font-size: 7pt;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;
  }

  .label-title {
    padding: 2mm;
    font-size: 8pt;
    text-align: center;
    font-weight: bold;
    line-height: 1.2;
    max-height: 14mm;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .label-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding: 1mm 3mm;
    gap: 3mm;
  }

  .label-barcode {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .label-barcode svg {
    width: 100% !important;
    height: auto !important;
    max-height: 18mm;
  }

  .label-qrcode {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .label-qrcode svg {
    width: 100% !important;
    height: auto !important;
    max-width: 18mm;
    max-height: 18mm;
  }

  .label-footer {
    background: #f5f5f5;
    padding: 1mm 3mm;
    font-size: 7pt;
    text-align: center;
    border-top: 1px dashed #ddd;
    display: flex;
    flex-direction: column;
  }

  .label-code {
    font-weight: bold;
    color: #1B396A;
    font-size: 8pt;
  }

  .label-isbn {
    font-size: 6pt;
    color: #555;
    margin-top: 0.5mm;
  }

  .label-location {
    font-size: 6pt;
    color: #555;
    font-style: italic;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* =====================================================
     ÁREA DE IMPRESIÓN (oculta fuera de print)
  ===================================================== */
  #printArea { display:none; }

  /* =====================================================
     EFECTOS / TOOLTIPS
  ===================================================== */
  @keyframes fadeIn { from{opacity:0;transform:translateY(10px);} to{opacity:1;transform:translateY(0);} }
  .fade-in { animation: fadeIn .3s ease-out forwards; }

  [data-tooltip]{ position:relative; }
  [data-tooltip]::after{
    content:attr(data-tooltip); position:absolute; bottom:100%; left:50%; transform:translateX(-50%);
    background:var(--color-dark); color:#fff; padding:5px 10px; border-radius:4px;
    font-size:.8rem; white-space:nowrap; opacity:0; visibility:hidden; transition:.2s; margin-bottom:5px;
  }
  [data-tooltip]:hover::after{ opacity:1; visibility:visible; }

  /* =====================================================
     MODO IMPRESIÓN MEJORADO
  ===================================================== */
  @media print {
    body * { 
      visibility: hidden; 
      margin: 0 !important; 
      padding: 0 !important; 
    }
    
    #printArea, #printArea * { 
      visibility: visible; 
      margin: 0 !important;
      padding: 0 !important;
    }

    #printArea {
      display: block !important;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: #fff;
    }

    .labels-grid {
      display: grid;
      grid-template-columns: repeat(3, 65mm);
      grid-template-rows: repeat(8, 35mm);
      gap: 5mm;
      padding: 15mm;
      margin: 0;
      page-break-after: always;
      width: 210mm;
      height: 297mm;
    }

    .label {
      width: 65mm;
      height: 35mm;
      border: 1px solid #ccc !important;
      box-shadow: none !important;
      page-break-inside: avoid;
      break-inside: avoid;
      -webkit-print-color-adjust: exact;
      print-color-adjust: exact;
    }

    .label-header {
      background: #1B396A !important;
      -webkit-print-color-adjust: exact;
      print-color-adjust: exact;
    }

    @page {
      size: A4 portrait;
      margin: 15mm;
    }
  }

  /* =====================================================
     DIÁLOGO DE IMPRESIÓN PERSONALIZADO
  ===================================================== */
  .print-dialog {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }

  .print-dialog-content {
    background: white;
    padding: 20px;
    border-radius: 8px;
    width: 400px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.2);
  }

  .print-dialog h3 {
    margin-top: 0;
    color: var(--color-primary);
    border-bottom: 1px solid var(--color-border);
    padding-bottom: 10px;
  }

  .print-option {
    margin: 15px 0;
  }

  .print-option label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }

  .print-option select, .print-option input {
    width: 100%;
    padding: 8px;
    border: 1px solid var(--color-border);
    border-radius: 4px;
  }

  .print-dialog-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
  }

  .print-notice {
    font-size: 0.9em;
    color: var(--color-gray);
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px dashed var(--color-border);
  }
</style>
</head>
<body>
<div class="container">
  <header>
    <h1><i class="fas fa-tags"></i> Generador de Etiquetas</h1>
    <p>Sistema de gestión bibliotecaria</p>
  </header>

  <section class="search-section fade-in">
    <h2><i class="fas fa-search"></i> Buscar Ejemplares</h2>
    <form class="search-form" onsubmit="event.preventDefault(); buscar();">
      <input type="text" id="searchInput" class="search-input" 
             placeholder="Buscar por código, título, ISBN o ubicación..." 
             minlength="2" required>
      <button type="submit" class="btn btn-primary">
        <i class="fas fa-search"></i> Buscar
      </button>
    </form>
  </section>

  <section class="search-section fade-in">
    <h2><i class="fas fa-list"></i> Resultados</h2>
    <div id="searchResultsContainer">
      <div class="no-results" style="display: none;">
        <i class="fas fa-book-open"></i>
        <p id="noResultsText"></p>
        <button class="btn btn-outline" onclick="document.getElementById('searchInput').focus()">
          <i class="fas fa-redo"></i> Intentar otra búsqueda
        </button>
      </div>
      <div class="table-responsive" id="resultsTable" style="display: none;">
        <table>
          <thead>
            <tr>
              <th><i class="fas fa-barcode"></i> Código</th>
              <th><i class="fas fa-book"></i> Título</th>
              <th><i class="fas fa-hashtag"></i> ISBN</th>
              <th><i class="fas fa-map-marker-alt"></i> Ubicación</th>
              <th><i class="fas fa-cog"></i> Acciones</th>
            </tr>
          </thead>
          <tbody id="resBody">
            <!-- Los resultados se agregarán aquí dinámicamente -->
          </tbody>
        </table>
      </div>
    </div>
  </section>

  <section class="search-section fade-in">
    <h2><i class="fas fa-shopping-cart"></i> Carrito de Etiquetas <span id="cartCount" class="badge">0</span></h2>
    <div class="table-responsive">
      <table id="cartTable">
        <thead>
          <tr>
            <th><i class="fas fa-barcode"></i> Código</th>
            <th><i class="fas fa-book"></i> Título</th>
            <th><i class="fas fa-hashtag"></i> ISBN</th>
            <th><i class="fas fa-map-marker-alt"></i> Ubicación</th>
            <th><i class="fas fa-cog"></i> Acciones</th>
          </tr>
        </thead>
        <tbody id="cartBody">
          <!-- Los elementos del carrito se agregarán aquí dinámicamente -->
        </tbody>
      </table>
    </div>
    <div class="cart-actions">
      <button id="printBtn" class="btn btn-primary" disabled data-tooltip="Generar e imprimir etiquetas">
        <i class="fas fa-print"></i> Imprimir Etiquetas
      </button>
      <button id="clearCartBtn" class="btn btn-danger" data-tooltip="Vaciar todo el carrito">
        <i class="fas fa-trash-alt"></i> Vaciar Carrito
      </button>
    </div>
  </section>
</div>

<!-- Área de impresión oculta -->
<div id="printArea">
  <div class="labels-grid" id="labelsGrid"></div>
</div>

<!-- Diálogo de impresión personalizado -->
<div class="print-dialog" id="printDialog">
  <div class="print-dialog-content">
    <h3><i class="fas fa-print"></i> Imprimir Etiquetas</h3>
    
    <div class="print-option">
      <label for="printerSelect">Impresora:</label>
      <select id="printerSelect">
        <option value="pdf">Guardar como PDF</option>
        <option value="system">Impresora predeterminada</option>
      </select>
    </div>
    
    <div class="print-option">
      <label>Páginas:</label>
      <div>
        <input type="radio" id="printAll" name="pages" value="all" checked>
        <label for="printAll">Todo</label>
      </div>
      <div>
        <input type="radio" id="printRange" name="pages" value="range">
        <label for="printRange">
          <input type="text" id="pageRange" placeholder="Ejemplo: 1-5, 8, 11-13" disabled>
        </label>
      </div>
    </div>
    
    <div class="print-option">
      <label for="copies">Copias:</label>
      <input type="number" id="copies" min="1" max="10" value="1">
    </div>
    
    <div class="print-notice">
      <p><strong>Total:</strong> <span id="totalPages">1</span> página(s)</p>
      <p><strong>Nota:</strong> Las etiquetas se organizan en 3 columnas por 8 filas por página.</p>
    </div>
    
    <div class="print-dialog-buttons">
      <button id="cancelPrint" class="btn btn-outline">Cancelar</button>
      <button id="confirmPrint" class="btn btn-primary">Imprimir</button>
    </div>
  </div>
</div>

<script>
/* -------------------------- VARIABLES GLOBALES --------------------------- */
let cart = [];

/* -------------------------- ELEMENTOS DEL DOM --------------------------- */
const searchInput = document.getElementById('searchInput');
const resBody = document.getElementById('resBody');
const cartBody = document.getElementById('cartBody');
const cartCount = document.getElementById('cartCount');
const printBtn = document.getElementById('printBtn');
const clearCartBtn = document.getElementById('clearCartBtn');
const labelsGrid = document.getElementById('labelsGrid');
const noResultsDiv = document.querySelector('.no-results');
const resultsTable = document.getElementById('resultsTable');
const noResultsText = document.getElementById('noResultsText');
const printDialog = document.getElementById('printDialog');
const printerSelect = document.getElementById('printerSelect');
const printAll = document.getElementById('printAll');
const printRange = document.getElementById('printRange');
const pageRange = document.getElementById('pageRange');
const copies = document.getElementById('copies');
const totalPages = document.getElementById('totalPages');
const cancelPrint = document.getElementById('cancelPrint');
const confirmPrint = document.getElementById('confirmPrint');

/* ----------------------- FUNCIÓN PARA FORMATEAR UBICACIÓN --------------- */
function formatUbicacion(ubic) {
  if (!ubic) return 'Sin ubicación';
  // Limpiar espacios extras y formatear consistentemente
  return ubic
    .replace(/,/g, ', ')       // Añadir espacio después de comas
    .replace(/\s+/g, ' ')      // Eliminar múltiples espacios
    .replace(/(Estante \d+),?/g, '$1, ')  // Formatear "Estante X,"
    .replace(/(fila \d+)/g, '$1')         // Mantener "fila X"
    .trim()                    // Eliminar espacios al inicio/final
    .replace(/,\s*$/, '');     // Eliminar coma final si existe
}

/* ----------------------- CARGAR CARRITO AL INICIAR ---------------------- */
function loadCart() {
  const savedCart = localStorage.getItem('biblioteca_carrito_etiquetas');
  if (savedCart) {
    cart = JSON.parse(savedCart);
    updateCart();
  }
}

/* ------------------------- GUARDAR CARRITO ------------------------------ */
function saveCart() {
  localStorage.setItem('biblioteca_carrito_etiquetas', JSON.stringify(cart));
}

/* -------------------- AGREGAR EJEMPLAR AL CARRITO ----------------------- */
resBody?.addEventListener('click', (e) => {
  const btn = e.target.closest('.btn-success');
  if (!btn) return;

  const item = JSON.parse(btn.dataset.json);
  // Aplicar formatUbicacion al agregar al carrito
  item.ubicFormateada = formatUbicacion(item.ubic);
  cart.push(item);
  saveCart();
  updateCart();
  
  // Feedback visual
  const originalHTML = btn.innerHTML;
  btn.innerHTML = '<i class="fas fa-check"></i> Agregado';
  btn.classList.add('btn-success');
  setTimeout(() => {
    btn.innerHTML = originalHTML;
  }, 1000);
});

/* ------------------- ELIMINAR EJEMPLAR DEL CARRITO ---------------------- */
cartBody.addEventListener('click', (e) => {
  const btn = e.target.closest('.btn-danger');
  if (!btn) return;

  const index = btn.dataset.index;
  cart.splice(index, 1);
  saveCart();
  updateCart();
});

/* ---------------------- ACTUALIZAR VISTA CARRITO ------------------------ */
function updateCart() {
  cartCount.textContent = cart.length;
  printBtn.disabled = cart.length === 0;

  // Calcular páginas necesarias (24 etiquetas por página)
  const pages = Math.ceil(cart.length / 24);
  totalPages.textContent = pages;

  cartBody.innerHTML = '';
  cart.forEach((item, index) => {
    const tr = document.createElement('tr');
    tr.className = 'fade-in';
    tr.innerHTML = `
      <td>${item.codigo || 'SN'}</td>
      <td>${item.titulo || 'Sin título'}</td>
      <td>${item.isbn || 'N/A'}</td>
      <td>${item.ubicFormateada || formatUbicacion(item.ubic)}</td>
      <td>
        <button class="btn btn-danger btn-sm" data-index="${index}" data-tooltip="Quitar del carrito">
          <i class="fas fa-trash"></i> Eliminar
        </button>
      </td>
    `;
    cartBody.appendChild(tr);
  });

  generateLabels();
}

/* ---------------------- GENERAR VISTA DE ETIQUETAS ---------------------- */
function generateLabels() {
  labelsGrid.innerHTML = '';

  cart.forEach((item, index) => {
    const ubicacionFormateada = item.ubicFormateada || formatUbicacion(item.ubic);
    const labelDiv = document.createElement('div');
    labelDiv.className = 'label';
    labelDiv.innerHTML = `
      <div class="label-header">Biblioteca</div>
      <div class="label-title">${item.titulo || 'Sin título'}</div>
      <div class="label-content">
        <div class="label-barcode">
          <svg id="barcode-${index}"></svg>
        </div>
        <div class="label-qrcode" id="qrcode-${index}"></div>
      </div>
      <div class="label-footer">
        <span class="label-code">${item.codigo || item.isbn || 'SN'}</span>
        ${item.isbn ? `<span class="label-isbn">ISBN: ${item.isbn}</span>` : ''}
        <span class="label-location">${ubicacionFormateada}</span>
      </div>
    `;
    labelsGrid.appendChild(labelDiv);

    /* ---------- CÓDIGO DE BARRAS (usa ISBN si está disponible) ---------- */
    const codigoParaBarras = item.isbn || item.codigo || '000000';
    JsBarcode(`#barcode-${index}`, codigoParaBarras, {
      format: "CODE128",
      lineColor: "#1B396A",
      width: 1.5,
      height: 30,
      displayValue: false,
      margin: 3
    });

    /* --------------- CÓDIGO QR (usa el mismo código que el de barras) --------------- */
    const QRFactory = window.qrcode || window.QRCode;
    if (QRFactory) {
      const qr = QRFactory(0, 'L');
      qr.addData(codigoParaBarras);
      qr.make();
      document.getElementById(`qrcode-${index}`).innerHTML = qr.createSvgTag({
        cellSize: 2.5,
        margin: 0,
        scalable: true
      });
    }
  });
}

/* ------------------------ VACIAR CARRITO ------------------------------- */
clearCartBtn.addEventListener('click', () => {
  if (cart.length === 0) return;
  if (!confirm('¿Está seguro que desea vaciar el carrito?')) return;

  cart = [];
  saveCart();
  updateCart();
});

/* ------------------------- MANEJAR DIÁLOGO DE IMPRESIÓN ---------------- */
printBtn.addEventListener('click', () => {
  // Mostrar diálogo de impresión personalizado
  printDialog.style.display = 'flex';
});

cancelPrint.addEventListener('click', () => {
  printDialog.style.display = 'none';
});

printAll.addEventListener('change', () => {
  pageRange.disabled = true;
});

printRange.addEventListener('change', () => {
  pageRange.disabled = false;
  pageRange.focus();
});

confirmPrint.addEventListener('click', () => {
  printDialog.style.display = 'none';
  
  // Generar etiquetas antes de imprimir
  generateLabels();
  
  // Esperar a que se generen las etiquetas
  setTimeout(() => {
    if (printerSelect.value === 'pdf') {
      // Usar el diálogo de impresión del navegador para guardar como PDF
      window.print();
    } else {
      // Intentar imprimir directamente (funcionará si hay una impresora configurada)
      window.print();
    }
  }, 200);
});

/* -------------------------- BÚSQUEDA ----------------------------------- */
window.buscar = async () => {
  const query = searchInput.value.trim();
  if (query.length < 2) {
    alert('Por favor ingrese al menos 2 caracteres para buscar');
    return;
  }

  try {
    // Simular búsqueda (en un caso real, sería una llamada a tu backend)
    noResultsText.textContent = `Buscando "${query}"...`;
    noResultsDiv.style.display = 'flex';
    resultsTable.style.display = 'none';
    
    // Aquí iría tu llamada fetch real al backend
    // const response = await fetch(`/backend/query.astro?q=${encodeURIComponent(query)}`);
    // const resultados = await response.json();
    
    // Simulamos una respuesta después de 500ms
    setTimeout(() => {
      const resultados = [
        {
          id: 1,
          codigo: 'ADQ-2025-01',
          titulo: 'Historia del arte',
          isbn: '978-1234567890',
          ubic: 'Estante 1, fila 2'
        },
        {
          id: 2,
          codigo: 'ADQ-2025-02',
          titulo: 'Técnicas artísticas modernas',
          isbn: '978-9876543210',
          ubic: 'Estante 1, fila 3'
        }
      ];
      
      // Mostrar resultados
      if (resultados.length === 0) {
        noResultsText.textContent = `No se encontraron resultados para "${query}"`;
        noResultsDiv.style.display = 'flex';
        resultsTable.style.display = 'none';
      } else {
        noResultsDiv.style.display = 'none';
        resultsTable.style.display = 'block';
        
        resBody.innerHTML = '';
        resultados.forEach(r => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${r.codigo || 'SN'}</td>
            <td>${r.titulo || 'Sin título'}</td>
            <td>${r.isbn || 'N/A'}</td>
            <td>${formatUbicacion(r.ubic)}</td>
            <td>
              <button class="btn btn-success btn-sm" data-json='${JSON.stringify(r)}' data-tooltip="Agregar al carrito">
                <i class="fas fa-cart-plus"></i> Agregar
              </button>
            </td>
          `;
          resBody.appendChild(tr);
        });
      }
    }, 500);
  } catch (error) {
    console.error('Error:', error);
    noResultsText.textContent = 'Error al realizar la búsqueda';
    noResultsDiv.style.display = 'flex';
    resultsTable.style.display = 'none';
  }
};

/* ----------------------- INICIALIZACIÓN ------------------------------- */
document.addEventListener('DOMContentLoaded', () => {
  loadCart();
  
  // Cargar búsqueda inicial si hay parámetro en la URL
  const params = new URLSearchParams(window.location.search);
  const query = params.get('q');
  if (query) {
    searchInput.value = query;
    buscar();
  }
  
  // Efecto de carga inicial
  document.querySelectorAll('.fade-in').forEach(el => {
    el.style.opacity = '0';
  });
  
  setTimeout(() => {
    document.querySelectorAll('.fade-in').forEach(el => {
      el.style.transition = 'opacity 0.3s ease-out';
      el.style.opacity = '1';
    });
  }, 100);
});
</script>
</body>
</html>
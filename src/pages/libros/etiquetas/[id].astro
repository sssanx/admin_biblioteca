---
// src/pages/libros/ejemplares/[id].astro
export const prerender = false;

import db from "../../../lib/db";

const { id } = Astro.params;

// Validar parámetro ID
if (!id || isNaN(Number(id))) {
  return new Response(null, {
    status: 400,
    statusText: 'ID de libro inválido'
  });
}

// Consultar libro y sus ejemplares
let libro = null;
let ejemplares = [];
try {
  // Consultar libro
  const libroResult = await db.query(`
    SELECT id, titulo, autor, isbn, clasificacion, ubicacion 
    FROM libros 
    WHERE id = $1
  `, [id]);
  
  libro = libroResult.rows[0];
  
  if (!libro) {
    return new Response(null, {
      status: 404,
      statusText: 'Libro no encontrado'
    });
  }

  // Consultar ejemplares del libro
  const ejemplaresResult = await db.query(`
    SELECT 
      e.id, e.codigo_barras, e.estado, 
      e.ubicacion, e.fecha_adquisicion,
      e.precio, e.proveedor, e.observaciones,
      to_char(e.fecha_adquisicion, 'YYYY-MM-DD') as fecha_adquisicion_formatted
    FROM ejemplares e
    WHERE e.libro_id = $1
    ORDER BY e.codigo_barras ASC
  `, [id]);
  
  ejemplares = ejemplaresResult.rows;
} catch (error) {
  console.error('Error en consulta SQL:', error);
  return new Response(null, {
    status: 500,
    statusText: 'Error al consultar la base de datos'
  });
}

// Manejar creación de nuevo ejemplar
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const action = formData.get('action');
  
  try {
    if (action === 'crear') {
      // Insertar nuevo ejemplar
      await db.query(`
        INSERT INTO ejemplares (
          libro_id, codigo_barras, estado, 
          ubicacion, fecha_adquisicion, precio,
          proveedor, observaciones
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
      `, [
        id,
        formData.get('codigo_barras'),
        formData.get('estado'),
        formData.get('ubicacion') || libro.ubicacion,
        formData.get('fecha_adquisicion'),
        formData.get('precio'),
        formData.get('proveedor'),
        formData.get('observaciones')
      ]);
    } else if (action === 'actualizar') {
      // Actualizar ejemplar existente
      await db.query(`
        UPDATE ejemplares SET
          codigo_barras = $1,
          estado = $2,
          ubicacion = $3,
          fecha_adquisicion = $4,
          precio = $5,
          proveedor = $6,
          observaciones = $7
        WHERE id = $8
      `, [
        formData.get('codigo_barras'),
        formData.get('estado'),
        formData.get('ubicacion'),
        formData.get('fecha_adquisicion'),
        formData.get('precio'),
        formData.get('proveedor'),
        formData.get('observaciones'),
        formData.get('ejemplar_id')
      ]);
    } else if (action === 'eliminar') {
      // Eliminar ejemplar
      await db.query(`
        DELETE FROM ejemplares 
        WHERE id = $1
      `, [formData.get('ejemplar_id')]);
    }
    
    // Redirigir para evitar reenvío del formulario
    return Astro.redirect(`/libros/ejemplares/${id}`, 303);
  } catch (error) {
    console.error('Error al procesar formulario:', error);
  }
}
---
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ejemplares - {libro.titulo || 'Sin título'}</title>
  <style>
    :root {
      --color-primary: #005D93;
      --color-secondary: #4a5568;
      --color-success: #38a169;
      --color-danger: #e53e3e;
      --border-radius: 5px;
      --shadow-sm: 0 1px 3px rgba(0,0,0,0.1);
    }
    
    body {
      font-family: 'Segoe UI', system-ui, sans-serif;
      line-height: 1.6;
      margin: 0;
      padding: 20px;
      background-color: #f8fafc;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
    }
    
    header {
      background: var(--color-primary);
      color: white;
      padding: 1.5rem;
      border-radius: var(--border-radius);
      margin-bottom: 2rem;
      box-shadow: var(--shadow-sm);
    }
    
    h1 {
      margin: 0;
      font-size: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .metadata {
      margin-top: 0.5rem;
      font-size: 0.9rem;
      opacity: 0.9;
    }
    
    .card {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow-sm);
      padding: 1.25rem;
      margin-bottom: 1.5rem;
    }
    
    .card-header {
      display: flex;
      align-items: center;
      margin-bottom: 1rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid #e2e8f0;
    }
    
    .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }
    
    .table th, .table td {
      padding: 0.75rem;
      text-align: left;
      border-bottom: 1px solid #e2e8f0;
    }
    
    .table th {
      background-color: #f7fafc;
      font-weight: 600;
      color: var(--color-secondary);
    }
    
    .badge {
      display: inline-block;
      padding: 0.25rem 0.5rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
    }
    
    .badge-success {
      background-color: #f0fff4;
      color: var(--color-success);
    }
    
    .badge-warning {
      background-color: #fffaf0;
      color: #dd6b20;
    }
    
    .badge-danger {
      background-color: #fff5f5;
      color: var(--color-danger);
    }
    
    .btn {
      padding: 0.5rem 1rem;
      border-radius: var(--border-radius);
      cursor: pointer;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.2s;
      border: none;
      font-size: 0.875rem;
    }
    
    .btn-sm {
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
    }
    
    .btn-primary {
      background: var(--color-primary);
      color: white;
    }
    
    .btn-primary:hover {
      background: #004b7a;
    }
    
    .btn-success {
      background: var(--color-success);
      color: white;
    }
    
    .btn-success:hover {
      background: #2f855a;
    }
    
    .btn-danger {
      background: var(--color-danger);
      color: white;
    }
    
    .btn-danger:hover {
      background: #c53030;
    }
    
    .btn-secondary {
      background: #edf2f7;
      color: var(--color-secondary);
    }
    
    .btn-secondary:hover {
      background: #e2e8f0;
    }
    
    .form-group {
      margin-bottom: 1rem;
    }
    
    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--color-secondary);
    }
    
    input, select, textarea {
      width: 100%;
      padding: 0.5rem 0.75rem;
      border: 1px solid #cbd5e0;
      border-radius: var(--border-radius);
      font-family: inherit;
    }
    
    input:focus, select:focus, textarea:focus {
      outline: none;
      border-color: var(--color-primary);
      box-shadow: 0 0 0 3px rgba(0, 93, 147, 0.1);
    }
    
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1rem;
    }
    
    .actions {
      margin-top: 1rem;
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
    }
    
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }
    
    .modal-content {
      background: white;
      border-radius: var(--border-radius);
      width: 90%;
      max-width: 500px;
      max-height: 90vh;
      overflow-y: auto;
      padding: 1.5rem;
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid #e2e8f0;
    }
    
    .modal-title {
      margin: 0;
      font-size: 1.25rem;
    }
    
    .modal-close {
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: var(--color-secondary);
    }
    
    @media (max-width: 768px) {
      .table-responsive {
        overflow-x: auto;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M4 19.5C4 18.9477 4.44772 18.5 5 18.5H19C19.5523 18.5 20 18.9477 20 19.5C20 20.0523 19.5523 20.5 19 20.5H5C4.44772 20.5 4 20.0523 4 19.5Z"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M4 5.5C4 4.94772 4.44772 4.5 5 4.5H14C14.5523 4.5 15 4.94772 15 5.5V15.5C15 16.0523 14.5523 16.5 14 16.5H5C4.44772 16.5 4 16.0523 4 15.5V5.5ZM6 6.5V14.5H13V6.5H6Z"/>
          <path d="M17 6.5C17 5.94772 17.4477 5.5 18 5.5C18.5523 5.5 19 5.94772 19 6.5V15.5C19 16.0523 18.5523 16.5 18 16.5C17.4477 16.5 17 16.0523 17 15.5V6.5Z"/>
        </svg>
        Gestión de Ejemplares
      </h1>
      <div class="metadata">
        <div>Libro ID: <strong>{libro.id}</strong></div>
        <div>Título: <strong>{libro.titulo || 'Sin título'}</strong></div>
        <div>Autor: <strong>{libro.autor || 'No especificado'}</strong></div>
        <div>Total de ejemplares: <strong>{ejemplares.length}</strong></div>
      </div>
    </header>

    <div class="card">
      <div class="card-header">
        <h2>Listado de Ejemplares</h2>
      </div>
      
      <div class="actions">
        <button 
          type="button" 
          class="btn btn-success" 
          onclick="document.getElementById('nuevoEjemplarModal').style.display = 'flex'"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
          </svg>
          Nuevo Ejemplar
        </button>
      </div>
      
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th>Código de Barras</th>
              <th>Estado</th>
              <th>Ubicación</th>
              <th>Adquisición</th>
              <th>Precio</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            {ejemplares.length > 0 ? (
              ejemplares.map(ejemplar => {
                let estadoClass = '';
                let estadoText = '';
                
                switch(ejemplar.estado) {
                  case 'disponible':
                    estadoClass = 'badge-success';
                    estadoText = 'Disponible';
                    break;
                  case 'prestado':
                    estadoClass = 'badge-warning';
                    estadoText = 'Prestado';
                    break;
                  case 'perdido':
                    estadoClass = 'badge-danger';
                    estadoText = 'Perdido';
                    break;
                  default:
                    estadoClass = 'badge-secondary';
                    estadoText = ejemplar.estado;
                }
                
                return (
                  <tr>
                    <td>{ejemplar.codigo_barras}</td>
                    <td><span class={`badge ${estadoClass}`}>{estadoText}</span></td>
                    <td>{ejemplar.ubicacion}</td>
                    <td>{ejemplar.fecha_adquisicion_formatted || 'No especificada'}</td>
                    <td>{ejemplar.precio ? `$${parseFloat(ejemplar.precio).toFixed(2)}` : '-'}</td>
                    <td>
                      <button 
                        type="button" 
                        class="btn btn-sm btn-secondary"
                        onclick="abrirEditarEjemplarModal({
                          id: '{ejemplar.id}',
                          codigo_barras: '{ejemplar.codigo_barras}',
                          estado: '{ejemplar.estado}',
                          ubicacion: '{ejemplar.ubicacion}',
                          fecha_adquisicion: '{ejemplar.fecha_adquisicion_formatted}',
                          precio: '{ejemplar.precio}',
                          proveedor: '{ejemplar.proveedor || ''}',
                          observaciones: '{ejemplar.observaciones || ''}'
                        })"
                      >
                        Editar
                      </button>
                      <form 
                        method="POST" 
                        action="?" 
                        style="display: inline;"
                        onsubmit="return confirm('¿Estás seguro de eliminar este ejemplar?')"
                      >
                        <input type="hidden" name="action" value="eliminar">
                        <input type="hidden" name="ejemplar_id" value={ejemplar.id}>
                        <button type="submit" class="btn btn-sm btn-danger">
                          Eliminar
                        </button>
                      </form>
                    </td>
                  </tr>
                );
              })
            ) : (
              <tr>
                <td colspan="6" style="text-align: center; padding: 2rem;">
                  No se encontraron ejemplares registrados para este libro.
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>

    <!-- Modal para nuevo ejemplar -->
    <div id="nuevoEjemplarModal" class="modal">
      <div class="modal-content">
        <div class="modal-header">
          <h3 class="modal-title">Registrar Nuevo Ejemplar</h3>
          <button 
            class="modal-close"
            onclick="document.getElementById('nuevoEjemplarModal').style.display = 'none'"
          >
            &times;
          </button>
        </div>
        
        <form method="POST" action="?">
          <input type="hidden" name="action" value="crear">
          
          <div class="grid">
            <div class="form-group">
              <label for="codigo_barras">Código de Barras *</label>
              <input 
                type="text" 
                id="codigo_barras" 
                name="codigo_barras" 
                required
                placeholder="Ej: LIB-0001"
              >
            </div>
            
            <div class="form-group">
              <label for="estado">Estado *</label>
              <select id="estado" name="estado" required>
                <option value="disponible">Disponible</option>
                <option value="prestado">Prestado</option>
                <option value="en_reparacion">En reparación</option>
                <option value="perdido">Perdido</option>
              </select>
            </div>
          </div>
          
          <div class="grid">
            <div class="form-group">
              <label for="ubicacion">Ubicación</label>
              <input 
                type="text" 
                id="ubicacion" 
                name="ubicacion" 
                value={libro.ubicacion || ''}
                placeholder="Ej: Estante A-5"
              >
            </div>
            
            <div class="form-group">
              <label for="fecha_adquisicion">Fecha de Adquisición</label>
              <input 
                type="date" 
                id="fecha_adquisicion" 
                name="fecha_adquisicion"
              >
            </div>
          </div>
          
          <div class="grid">
            <div class="form-group">
              <label for="precio">Precio (USD)</label>
              <input 
                type="number" 
                id="precio" 
                name="precio" 
                step="0.01"
                placeholder="Ej: 25.99"
              >
            </div>
            
            <div class="form-group">
              <label for="proveedor">Proveedor</label>
              <input 
                type="text" 
                id="proveedor" 
                name="proveedor" 
                placeholder="Ej: Librería Nacional"
              >
            </div>
          </div>
          
          <div class="form-group">
            <label for="observaciones">Observaciones</label>
            <textarea 
              id="observaciones" 
              name="observaciones" 
              rows="3"
              placeholder="Notas adicionales sobre el ejemplar"
            ></textarea>
          </div>
          
          <div class="actions">
            <button 
              type="button" 
              class="btn btn-secondary"
              onclick="document.getElementById('nuevoEjemplarModal').style.display = 'none'"
            >
              Cancelar
            </button>
            <button type="submit" class="btn btn-primary">
              Guardar Ejemplar
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal para editar ejemplar -->
    <div id="editarEjemplarModal" class="modal">
      <div class="modal-content">
        <div class="modal-header">
          <h3 class="modal-title">Editar Ejemplar</h3>
          <button 
            class="modal-close"
            onclick="document.getElementById('editarEjemplarModal').style.display = 'none'"
          >
            &times;
          </button>
        </div>
        
        <form method="POST" action="?">
          <input type="hidden" name="action" value="actualizar">
          <input type="hidden" id="editar_ejemplar_id" name="ejemplar_id">
          
          <div class="grid">
            <div class="form-group">
              <label for="editar_codigo_barras">Código de Barras *</label>
              <input 
                type="text" 
                id="editar_codigo_barras" 
                name="codigo_barras" 
                required
              >
            </div>
            
            <div class="form-group">
              <label for="editar_estado">Estado *</label>
              <select id="editar_estado" name="estado" required>
                <option value="disponible">Disponible</option>
                <option value="prestado">Prestado</option>
                <option value="en_reparacion">En reparación</option>
                <option value="perdido">Perdido</option>
              </select>
            </div>
          </div>
          
          <div class="grid">
            <div class="form-group">
              <label for="editar_ubicacion">Ubicación</label>
              <input 
                type="text" 
                id="editar_ubicacion" 
                name="ubicacion" 
              >
            </div>
            
            <div class="form-group">
              <label for="editar_fecha_adquisicion">Fecha de Adquisición</label>
              <input 
                type="date" 
                id="editar_fecha_adquisicion" 
                name="fecha_adquisicion"
              >
            </div>
          </div>
          
          <div class="grid">
            <div class="form-group">
              <label for="editar_precio">Precio (USD)</label>
              <input 
                type="number" 
                id="editar_precio" 
                name="precio" 
                step="0.01"
              >
            </div>
            
            <div class="form-group">
              <label for="editar_proveedor">Proveedor</label>
              <input 
                type="text" 
                id="editar_proveedor" 
                name="proveedor" 
              >
            </div>
          </div>
          
          <div class="form-group">
            <label for="editar_observaciones">Observaciones</label>
            <textarea 
              id="editar_observaciones" 
              name="observaciones" 
              rows="3"
            ></textarea>
          </div>
          
          <div class="actions">
            <button 
              type="button" 
              class="btn btn-secondary"
              onclick="document.getElementById('editarEjemplarModal').style.display = 'none'"
            >
              Cancelar
            </button>
            <button type="submit" class="btn btn-primary">
              Guardar Cambios
            </button>
          </div>
        </form>
      </div>
    </div>

    <script>
      function abrirEditarEjemplarModal(data) {
        document.getElementById('editar_ejemplar_id').value = data.id;
        document.getElementById('editar_codigo_barras').value = data.codigo_barras;
        document.getElementById('editar_estado').value = data.estado;
        document.getElementById('editar_ubicacion').value = data.ubicacion;
        document.getElementById('editar_fecha_adquisicion').value = data.fecha_adquisicion;
        document.getElementById('editar_precio').value = data.precio;
        document.getElementById('editar_proveedor').value = data.proveedor;
        document.getElementById('editar_observaciones').value = data.observaciones;
        
        document.getElementById('editarEjemplarModal').style.display = 'flex';
      }
      
      // Cerrar modales al hacer clic fuera del contenido
      window.onclick = function(event) {
        if (event.target.className === 'modal') {
          event.target.style.display = 'none';
        }
      }
    </script>
  </div>
</body>
</html>
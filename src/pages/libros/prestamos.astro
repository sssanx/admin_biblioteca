---
import db from '../../lib/db.js';
import AdminLayout from '../../layouts/AdminLayout.astro';

const { rows: prestamos } = await db.query(`
  SELECT p.id,
         l.titulo,
         u.nombre,
         p.fecha_prestamo,
         p.fecha_devolucion,
         p.fecha_devolucion_esperada,
         CASE
           WHEN p.fecha_devolucion IS NOT NULL THEN 'devuelto'
           WHEN p.fecha_devolucion_esperada < NOW() THEN 'vencido'
           ELSE 'en_prestamo'
         END AS estado
  FROM prestamos p
  JOIN libros l ON l.id = p.libro_id
  JOIN usuarios u ON u.id = p.usuario_id
  ORDER BY p.fecha_prestamo DESC
`);
---

<AdminLayout title="Gestión de Préstamos">
  <div class="container mx-auto px-4 py-8">
    <!-- Header con botones mejorados -->
    <div class="flex flex-col md:flex-row justify-between items-center mb-8 gap-4">
      <h1 class="text-2xl md:text-3xl font-bold text-gray-800 flex items-center gap-3">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
        </svg>
        Gestión de Préstamos
      </h1>

      <div class="flex flex-col sm:flex-row gap-3 w-full md:w-auto">
        <!-- Botón Nuevo Préstamo -->
        <a href="/libros/prestamos/nuevo" class="btn-primary flex items-center justify-center gap-2 px-4 py-2 transition-all hover:scale-105">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
          Nuevo Préstamo
        </a>

        <!-- Botón Historial -->
        <a href="/libros/historial" class="btn-secondary flex items-center justify-center gap-2 px-4 py-2 transition-all hover:scale-105">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
          Ver Historial
        </a>

        <!-- Botón Generar Multas -->
        <button id="generarMultasBtn" class="btn-warning flex items-center justify-center gap-2 px-4 py-2 transition-all hover:scale-105">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Generar Multas
        </button>
      </div>
    </div>

    <!-- Tabla de préstamos -->
    <div class="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl">
      <div class="overflow-x-auto">
        <div class="min-w-full max-h-[600px] overflow-y-auto custom-scroll">
          {prestamos.length > 0 ? (
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50 sticky top-0 z-10">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[25%]">Libro</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[20%]">Usuario</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[15%]">Fecha Préstamo</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[15%]">Fecha Límite</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[15%]">Estado</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]">Acciones</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                {prestamos.map((p, index) => {
                  const fechaLimite = new Date(p.fecha_devolucion_esperada);
                  const estaVencida = p.estado === 'vencido';

                  return (
                    <tr 
                      key={p.id} 
                      class="hover:bg-gray-50 transition-colors duration-150"
                      style={`animation: fadeIn 0.3s ease ${index * 0.05}s both;`}
                    >
                      <!-- Columna Libro -->
                      <td class="px-6 py-4 text-sm font-medium text-gray-900">
                        <div class="flex items-center gap-3">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-indigo-400 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                          </svg>
                          <span class="truncate">{p.titulo}</span>
                        </div>
                      </td>
                      
                      <!-- Columna Usuario -->
                      <td class="px-6 py-4 text-sm text-gray-600">
                        <div class="flex items-center gap-3">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                          </svg>
                          <span class="truncate">{p.nombre}</span>
                        </div>
                      </td>
                      
                      <!-- Columna Fecha Préstamo -->
                      <td class="px-6 py-4 text-sm text-gray-500">
                        <div class="flex items-center gap-3">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                          </svg>
                          {new Date(p.fecha_prestamo).toLocaleDateString('es-ES')}
                        </div>
                      </td>
                      
                      <!-- Columna Fecha Límite -->
                      <td class="px-6 py-4 text-sm font-medium">
                        <div class="flex items-center gap-3">
                          <svg xmlns="http://www.w3.org/2000/svg" class={`h-5 w-5 flex-shrink-0 ${estaVencida ? 'text-red-500 animate-pulse' : 'text-gray-400'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                          <span class={`${estaVencida ? 'text-red-600 font-bold' : 'text-gray-600'}`}>
                            {fechaLimite.toLocaleDateString('es-ES')}
                          </span>
                        </div>
                      </td>
                      
                      <!-- Columna Estado -->
                      <td class="px-6 py-4 text-sm">
                        {p.estado === 'devuelto' ? (
                          <span class="badge-success flex items-center justify-center gap-2 w-full py-1">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
                            </svg>
                            Devuelto
                          </span>
                        ) : p.estado === 'vencido' ? (
                          <span class="badge-danger flex items-center justify-center gap-2 w-full py-1 animate-pulse">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                            </svg>
                            Vencido
                          </span>
                        ) : (
                          <span class="badge-warning flex items-center justify-center gap-2 w-full py-1">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            En préstamo
                          </span>
                        )}
                      </td>
                      
                      <!-- Columna Acciones -->
                      <td class="px-6 py-4 text-sm">
                        <div class="flex flex-col sm:flex-row gap-3">
                          <a href={`/prestamos/${p.id}`} class="text-blue-600 hover:text-blue-800 flex items-center gap-1 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                              <path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                            </svg>
                            <span class="hidden sm:inline">Ver</span>
                          </a>
                          {p.estado !== 'devuelto' && (
                            <form method="POST" action="/api/devolver" class="inline">
                              <input type="hidden" name="id_prestamo" value={p.id} />
                              <button type="submit" class="text-green-600 hover:text-green-800 flex items-center gap-1 transition-colors">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                  <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
                                </svg>
                                <span class="hidden sm:inline">Devolver</span>
                              </button>
                            </form>
                          )}
                        </div>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          ) : (
            <div class="text-center py-12 text-gray-500 flex flex-col items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-300 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <p class="text-lg text-gray-500 mb-4">No hay préstamos registrados</p>
              <a href="/libros/prestamos/nuevo" class="btn-primary flex items-center justify-center gap-2 px-6 py-2 transition-all hover:scale-105">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                Crear primer préstamo
              </a>
            </div>
          )}
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    document.getElementById('generarMultasBtn').addEventListener('click', async function() {
      const btn = this;
      btn.disabled = true;
      btn.innerHTML = `
        <svg class="animate-spin -ml-1 mr-2 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Procesando...
      `;
      
      try {
        const res = await fetch('/api/multas', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: new URLSearchParams({ action: 'generar_multas_vencidas' }),
        });
        const data = await res.json();
        
        // Notificación Toast
        const toast = document.createElement('div');
        toast.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-xl text-white font-medium flex items-center gap-3 z-50 transition-all duration-300 transform ${
          data.success ? 'bg-green-500' : 'bg-red-500'
        }`;
        toast.innerHTML = `
          ${data.success ? 
            '<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" /></svg>' :
            '<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>'}
          <span>${data.message}</span>
        `;
        document.body.appendChild(toast);
        
        setTimeout(() => {
          toast.style.opacity = '0';
          setTimeout(() => toast.remove(), 300);
        }, 3000);
        
        if (data.success) {
          setTimeout(() => window.location.reload(), 1000);
        } else {
          btn.disabled = false;
          btn.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Generar Multas
          `;
        }
      } catch {
        alert('Error al generar multas');
        btn.disabled = false;
        btn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Generar Multas
        `;
      }
    });
  </script>

  <style is:global>
    /* Estilos para botones */
    .btn-primary {
      background-color: #4f46e5;
      color: white;
      border-radius: 0.5rem;
      font-weight: 600;
      cursor: pointer;
      border: none;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .btn-primary:hover {
      background-color: #4338ca;
      transform: translateY(-1px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .btn-secondary {
      background-color: #f1f5f9;
      color: #334155;
      border-radius: 0.5rem;
      font-weight: 600;
      cursor: pointer;
      border: none;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .btn-secondary:hover {
      background-color: #e2e8f0;
      transform: translateY(-1px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .btn-warning {
      background-color: #f59e0b;
      color: white;
      border-radius: 0.5rem;
      font-weight: 600;
      cursor: pointer;
      border: none;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .btn-warning:hover {
      background-color: #d97706;
      transform: translateY(-1px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    /* Estilos para badges */
    .badge-success {
      background-color: #d1fae5;
      color: #065f46;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      transition: all 0.2s ease;
      padding: 0.25rem 0.75rem;
    }
    .badge-warning {
      background-color: #fef3c7;
      color: #92400e;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      transition: all 0.2s ease;
      padding: 0.25rem 0.75rem;
    }
    .badge-danger {
      background-color: #fee2e2;
      color: #b91c1c;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      transition: all 0.2s ease;
      padding: 0.25rem 0.75rem;
    }
    
    /* Scrollbar personalizada */
    .custom-scroll {
      scrollbar-width: thin;
      scrollbar-color: #c7d2fe #f1f1f1;
    }
    .custom-scroll::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    .custom-scroll::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }
    .custom-scroll::-webkit-scrollbar-thumb {
      background-color: #c7d2fe;
      border-radius: 10px;
      border: 2px solid #f1f1f1;
    }
    .custom-scroll::-webkit-scrollbar-thumb:hover {
      background-color: #a5b4fc;
    }
    
    /* Animaciones */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    /* Efecto hover para filas */
    tr:hover {
      transform: scale(1.005);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    tr {
      transition: all 0.2s ease;
    }
  </style>
</AdminLayout>